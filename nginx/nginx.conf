
# user  nginx;
worker_processes  auto;
worker_rlimit_nofile 40000;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  10240;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format cache '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" cs=$upstream_cache_status';

    access_log  /var/log/nginx/access.log  cache;

    sendfile    on;
    tcp_nopush  off;
    tcp_nodelay on;

    keepalive_timeout  15;

    proxy_buffering    off;
    proxy_buffer_size  16k;
    proxy_busy_buffers_size 24k;
    proxy_buffers 64 4k;

    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache:60m max_size=1G;
    proxy_cache_key $scheme$proxy_host$request_uri;

    # gzip  on;

    upstream proxy-frontend  {
        server frontend:3000;
    }

#     server {
#         listen 80 default_server;
#
#         server_name _;
#
#         return 301 https://$host$request_uri;
#     }

    server {
        listen 80;

#         listen 443 ssl http2;
#         listen [::]:443 ssl http2;

        server_name _;

        #access_log  /var/log/nginx/host.access.log  main;

        #error_page  404              /404.html;

#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   /usr/share/nginx/html;
#         }

        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 192.168.130.241 192.168.130.242 valid=300s;
        resolver_timeout 5s;
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";

        location / {

            proxy_pass http://proxy-frontend;

            # location ~* \.(js|ico|ttf|svg|scss|jsx|css)$ {
            #     proxy_cache          cache;
            #     proxy_cache_key      $host$uri$is_args$args;
            #     proxy_cache_valid    200 301 302 10m;
            #     proxy_cache_valid    404 1m;
            #     expires              10m;
            #     proxy_pass http://frontend;
            # }

            # deny access to .htaccess files, if Apache's document root
            # concurs with nginx's one
            #
            location ~ /\.ht {
                deny  all;
            }
        }
        root /var/www/html/public;

        location ~ /api {
            try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$) {
            fastcgi_pass php:9000;
            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            fastcgi_param HTTPS on;

            fastcgi_param HTTP_PROXY "";

            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;

            fastcgi_intercept_errors on;

            internal;
        }

#         location = /.well-known/mercure {
#             proxy_pass http://mercure:3002/.well-known/mercure;
#             proxy_read_timeout 24h;
#             proxy_http_version 1.1;
#             proxy_set_header Connection "";
#
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Host $host;
#             proxy_set_header X-Forwarded-Proto $scheme;
#
#             # Aseg?rate de pasar la cabecera Authorization
#             proxy_set_header Authorization $http_authorization;
#             proxy_set_header Authorization $http_authorization;
#             proxy_pass_request_headers on;
#
#             access_log off;
#         }
    }
}

